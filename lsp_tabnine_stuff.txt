




i = function(a, b)
    if vim.fn["UltiSnips#CanExpandSnippet"]() == 1 then
return cmp.confirm({ select = true })
    end

cmp.select_next_item({ behavior = cmp.SelectBehavior.Replace })
    end


mapping = {
    ['<C-d>'] = cmp.mapping.scroll_docs(-4),
    ['<C-f>'] = cmp.mapping.scroll_docs(4),
    ['<C-Space>'] = cmp.mapping.complete(),
    ['<C-e>'] = cmp.mapping.close(),
    ['<CR>'] = cmp.mapping.confirm({
      behavior = cmp.ConfirmBehavior.Replace,
      select = true
    }),
    ["<S-Tab>"] = cmp.mapping.select_prev_item(),
    ["<Tab>"] = cmp.mapping({
        i = function(_)
            if cmp.visible() then
                cmp.select_next_item({ behavior = cmp.SelectBehavior.Insert })
            elseif vim.fn["UltiSnips#CanJumpForwards"]() == 1 then
                vim.api.nvim_feedkeys(t("<Plug>(ultisnips_jump_forward)"), 'm', true)
            else
                vim.api.nvim_feedkeys(t('<Tab>'), 'n', true)        -- fallback()

            end
        end,
    }),
  },







i = function(_)
    if cmp.visible() then
        cmp.select_next_item({ behavior = cmp.SelectBehavior.Insert })
    elseif vim.fn["UltiSnips#CanJumpForwards"]() == 1 then
        vim.api.nvim_feedkeys(t("<Plug>(ultisnips_jump_forward)"), 'm', true)
    else
        vim.api.nvim_feedkeys(t('<Tab>'), 'n', true)        -- fallback()

    end
end,
